// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PasswordManagerApp.Models;

namespace PasswordManagerApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("PasswordManagerApp.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnName("address_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonalInfoId")
                        .HasColumnName("personal_info_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnName("street")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnName("zip_code")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInfoId");

                    b.ToTable("address");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.BreachedPassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Occuring")
                        .HasColumnName("occuring")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("breached_password");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnName("cardholder_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnName("card_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpirationDate")
                        .IsRequired()
                        .HasColumnName("expiration_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityCode")
                        .IsRequired()
                        .HasColumnName("security_code")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("credit_card");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.LoginData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Compromised")
                        .HasColumnName("compromised")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("login")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Website")
                        .HasColumnName("website")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("login_data");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnName("details")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("note");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.PaypallAcount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Compromised")
                        .HasColumnName("compromised")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("paypall_account");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.PersonalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnName("date_of_birth")
                        .HasColumnType("Date");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .HasColumnName("second_name")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("personal_info");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnName("nickname")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonalInfoId")
                        .HasColumnName("personal_info_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TelNumber")
                        .IsRequired()
                        .HasColumnName("phone_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInfoId");

                    b.ToTable("phone_number");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.SharedLoginData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("end_date")
                        .HasColumnType("TEXT");

                    b.Property<int>("LoginDataId")
                        .HasColumnName("login_data_id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("start_date")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LoginDataId");

                    b.HasIndex("UserId");

                    b.ToTable("shared_login_data");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.Totp_user", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Create_date")
                        .HasColumnName("create_date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expire_date")
                        .HasColumnName("expire_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("token")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Totp_Users");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Admin")
                        .HasColumnName("admin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthenticationTime")
                        .HasColumnName("authentication_time")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("master_password")
                        .HasColumnType("TEXT");

                    b.Property<int>("PasswordNotifications")
                        .HasColumnName("password_notifications")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnName("password_salt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TwoFactorAuthorization")
                        .HasColumnName("two_factor_authorization")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.UserDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Authorized")
                        .HasColumnName("authorized")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceGuid")
                        .IsRequired()
                        .HasColumnName("device_guid")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("user_device");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.VisitorAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnName("browser")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("TEXT");

                    b.Property<string>("OperatingSystem")
                        .IsRequired()
                        .HasColumnName("operating_system")
                        .HasColumnType("TEXT");

                    b.Property<string>("VisitTime")
                        .IsRequired()
                        .HasColumnName("visit_time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("visitor_agent");
                });

            modelBuilder.Entity("PasswordManagerApp.Models.Address", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.PersonalInfo", "PersonalInfo")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonalInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasswordManagerApp.Models.CreditCard", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.User", "User")
                        .WithMany("CreditCards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasswordManagerApp.Models.LoginData", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.User", "User")
                        .WithMany("LoginDatas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasswordManagerApp.Models.Note", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasswordManagerApp.Models.PaypallAcount", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.User", "User")
                        .WithMany("PaypallAcounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasswordManagerApp.Models.PersonalInfo", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.User", "User")
                        .WithOne("PersonalInfo")
                        .HasForeignKey("PasswordManagerApp.Models.PersonalInfo", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasswordManagerApp.Models.PhoneNumber", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.PersonalInfo", "PersonalInfo")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonalInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasswordManagerApp.Models.SharedLoginData", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.LoginData", "LoginData")
                        .WithMany("SharedLoginDatas")
                        .HasForeignKey("LoginDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PasswordManagerApp.Models.User", "User")
                        .WithMany("SharedLoginDatas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasswordManagerApp.Models.Totp_user", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.User", "User")
                        .WithMany("Totp_Users")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasswordManagerApp.Models.UserDevice", b =>
                {
                    b.HasOne("PasswordManagerApp.Models.User", "User")
                        .WithMany("UserDevices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
